#version 460
#extension GL_GOOGLE_include_directive : enable
#extension GL_EXT_debug_printf : enable

#include "svgf.glsl"
#include "gbuffer.glsl"
#include "random_sampler.glsl"
#include "math.glsl"
#include "scene.glsl"

layout(binding = 0, set = 0, rgba32f) uniform readonly image2DArray in_diffuse;
layout(binding = 1, set = 0, rgba32f) uniform readonly image2DArray normal;
layout(binding = 2, set = 0) uniform sampler2DArray in_depth;
layout(binding = 3, set = 0, rgba32f) uniform image2DArray out_diffuse;
layout(binding = 4) buffer uniforms
{
    uint frame_index;
} uniforms_buffer;
layout(binding = 5, set = 0, rgba32f) uniform readonly image2DArray in_specular;
layout(binding = 6, set = 0, rgba32f) uniform image2DArray out_specular;
layout(binding = 7, set = 0, rgba32f) uniform image2DArray in_material;

layout (local_size_x = 16, local_size_y = 16) in;
void main()
{
    const ivec3 p = ivec3(gl_GlobalInvocationID.xyz);
    if (!all(lessThan(p.xy, control.size))) return;

    vec4 color = imageLoad(in_diffuse, p);
    vec4 specular = imageLoad(in_specular, p);

    imageStore(out_specular, p, vec4(specular.rgba));
    imageStore(out_diffuse, p, color);
}